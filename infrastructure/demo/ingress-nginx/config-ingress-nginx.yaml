controller:
  extraArgs:
    metrics-per-host: false
  service:
    type: LoadBalancer
    annotations:
      service.beta.kubernetes.io/aws-load-balancer-name: apps-ingress
      service.beta.kubernetes.io/aws-load-balancer-type: nlb
      service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp
      service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: true
      service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: ip
      service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
      service.beta.kubernetes.io/aws-load-balancer-internal: false
      service.beta.kubernetes.io/aws-load-balancer-healthcheck-protocol: TCP
      service.beta.kubernetes.io/aws-load-balancer-healthcheck-path: /healthz
      service.beta.kubernetes.io/aws-load-balancer-healthcheck-port: 10254
  ingressClassResource:
    default: true

  # metrics:
  #   enabled: true
  #   serviceMonitor:
  #     enabled: true
  #     additionalLabels:
  #       release: prometheus
  # podAnnotations:
  #   prometheus.io/port: 10254
  #   prometheus.io/scrape: true

  # keda:
  #   apiVersion: "keda.sh/v1alpha1"
  #   enabled: true
  #   minReplicas: 3
  #   maxReplicas: 5
  #   pollingInterval: 60
  #   triggers:
  #     - type: prometheus
  #       metadata:
  #         serverAddress: http://prometheus-kube-prometheus-prometheus.monitoring:9090
  #         metricName: access_frequency
  #         threshold: "50"
  #         query: sum(rate(nginx_ingress_controller_requests{container="controller"}[1m]))
